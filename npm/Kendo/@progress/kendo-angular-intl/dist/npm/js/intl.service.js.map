{"version":3,"sources":["webpack:///webpack/bootstrap c4cc4f0541044c8795e3?82c5**","webpack:///external \"@angular/core\"?73d1**","webpack:///./src/intl.service.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACtCA,2C;;;;;;;;;;;;;;;;;ACAA,kCAA2B,CAAe,CAAC;AAG3C;;;;IAIG;AAEH;KAAA;KAsDA,CAAC;KAvDD;SAAC,iBAAU,EAAE;;oBAAA;KAuDb,kBAAC;AAAD,EAAC;AAtDqB,oBAAW,cAsDhC","file":"src/intl.service.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c4cc4f0541044c8795e3\n **/","module.exports = require(\"@angular/core\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@angular/core\"\n ** module id = 2\n ** module chunks = 0 1 2 3 5\n **/","import { Injectable } from '@angular/core';\nimport { DateFormatOptions, DateFormatNameOptions, NumberFormatOptions } from '@telerik/kendo-intl';\n\n/**\n * An abstract base class that implements\n * the Internationalization service methods\n * for the current locale.\n */\n@Injectable()\nexport abstract class IntlService {\n  /**\n   * Formats a string with placeholders such as\n   * `Total amount {0:c}`.\n   */\n  public abstract format(format: string, ...values: any[]): string;\n\n  /**\n   * Converts an object to a string based on the specified format.\n   */\n  public abstract toString(value: string, format: string): string;\n\n  /**\n   * Converts a Date object to a string based on the specified format.\n   * If no format is provided, the default short date format is used.\n   */\n  public abstract formatDate(\n    value: Date,\n    format?: String | DateFormatOptions\n  ): string;\n\n  /**\n   * Converts a string to a `Date` object based on the specified format.\n   */\n  public abstract parseDate(\n    value: string,\n    format?: string | DateFormatOptions | string[] | DateFormatOptions[]\n  ): Date;\n\n  /**\n   * Converts a string to a `Number`.\n   */\n  public abstract parseNumber(\n    value: string,\n    format?: string | NumberFormatOptions\n  ): number;\n\n  /**\n   * Converts a `Number` to a string based on the specified format.\n   */\n  public abstract formatNumber(\n    value: number,\n    format: string | NumberFormatOptions\n  ): string;\n\n  /**\n   * Returns the day names from the current locale based on the option.\n   */\n  public abstract dateFormatNames(options: DateFormatNameOptions): any;\n\n  /**\n   * Returns the first day index starting from Sunday.\n   */\n  public abstract firstDay(): number;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/intl.service.ts\n **/"],"sourceRoot":""}
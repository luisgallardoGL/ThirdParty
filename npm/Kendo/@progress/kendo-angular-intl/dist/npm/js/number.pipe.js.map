{"version":3,"sources":["webpack:///webpack/bootstrap c4cc4f0541044c8795e3?82c5****","webpack:///external \"@angular/core\"?73d1***","webpack:///external \"./intl.service\"?26c5**","webpack:///./src/number.pipe.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACtCA,2C;;;;;;;ACAA,4C;;;;;;;;;;;;;;;;;ACAA,kCAAoC,CAAe,CAAC;AACpD,0CAA4B,CAAgB,CAAC;AAG7C;;;;;;;;;;;;;IAaG;AAIH;KAEI,oBAAoB,WAAwB;SAAxB,gBAAW,GAAX,WAAW,CAAa;KAAI,CAAC;KAE1C,8BAAS,GAAhB,UAAiB,KAAU,EAAE,MAAqC;SAC9D,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;aAC5B,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAChD,CAAC;SAED,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aACR,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SACxD,CAAC;SACD,MAAM,CAAC,KAAK,CAAC;KACjB,CAAC;KAhBL;SAAC,WAAI,CAAC;aACF,IAAI,EAAE,aAAa;UACtB,CAAC;;mBAAA;KAeF,iBAAC;AAAD,EAAC;AAdY,mBAAU,aActB","file":"src/number.pipe.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c4cc4f0541044c8795e3\n **/","module.exports = require(\"@angular/core\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"@angular/core\"\n ** module id = 2\n ** module chunks = 0 1 2 3 5\n **/","module.exports = require(\"./intl.service\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"./intl.service\"\n ** module id = 5\n ** module chunks = 1 2 4 5\n **/","import { Pipe, PipeTransform } from '@angular/core';\nimport { IntlService } from './intl.service';\nimport { NumberFormatOptions } from '@telerik/kendo-intl';\n\n/**\n * Formats a number value to a string based on the requested format.\n * This pipe uses the `IntlService`.\n * @see IntlService.\n *\n * @example <caption>Basic Usage</caption>\n * ```ng-template-no-run\n *   <ul>\n *     <li>{{decimal | kendoNumber:'c' }}</li>\n *     <li>{{stringNumber | kendoNumber:'p' }}</li>\n *     <li>{{int | kendoNumber:'##.00' }}</li>\n *  </ul>\n * ```\n */\n@Pipe({\n    name: 'kendoNumber'\n})\nexport class NumberPipe implements PipeTransform {\n\n    constructor(private intlService: IntlService) { }\n\n    public transform(value: any, format?: string | NumberFormatOptions): any {\n        if (typeof value === 'string') {\n            value = this.intlService.parseNumber(value);\n        }\n\n        if (value) {\n            return this.intlService.formatNumber(value, format);\n        }\n        return value;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/number.pipe.ts\n **/"],"sourceRoot":""}